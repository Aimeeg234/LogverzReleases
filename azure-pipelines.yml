# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
- group: "Logverz Releases"
- name: GHTokenARMgmnt
  value: $[variables.GHAutomatedReleaseToken]

trigger:
- prod

pool: #'Default'
  vmImage: ubuntu-latest

steps:
- checkout: self
  persistCredentials: true #Important - Persist creds to run further git command
  clean: true
- checkout: git://LogverzCore/_git/LogverzCore
- checkout: git://LogverzPortal/_git/Portal
- checkout: git://LogverzPortal/_git/PortalAccess
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      write-host $env:GHTokenARMgmnt
      Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted #Get-PSRepository
      Install-Module -Name PowerShellForGitHub # Get-InstalledModule | ? {$_.Name -like "*Git*"}
      Import-Module -Name PowerShellForGitHub
      [string]$userName = 'AnyUserName'
      [string]$userPassword = "$(GHTokenARMgmnt)"
      [securestring]$secStringPassword = ConvertTo-SecureString $userPassword -AsPlainText -Force
      [pscredential]$credObject = New-Object System.Management.Automation.PSCredential ($userName,$secStringPassword)
      Set-GitHubAuthentication -Credential $credObject
      Get-GitHubRepository -RepositoryName LogverzReleases -OwnerName logleads
    failOnStderr: true
    showWarnings: true
    pwsh: true
  displayName: 'Installing dependencies'
- script: |
    echo "##[section]root folder contents"
    pwd && ls -la
    echo "##[section]Contents of LogverzCore folder"
    cd LogverzCore && pwd && ls -la && cd ..
  displayName: 'Debug'

#export GHTokenARMgmnt=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